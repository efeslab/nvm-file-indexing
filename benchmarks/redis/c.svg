<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="918.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="901" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="901" > </text>
<g id="frames">
<g >
<title>addReply (2 samples, 0.57%)</title><rect x="547.9" y="821" width="6.7" height="15.0" fill="rgb(212,166,4)" rx="2" ry="2" />
<text  x="550.89" y="831.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.28%)</title><rect x="716.0" y="677" width="3.3" height="15.0" fill="rgb(236,128,34)" rx="2" ry="2" />
<text  x="718.98" y="687.5" ></text>
</g>
<g >
<title>getname_flags (1 samples, 0.28%)</title><rect x="988.3" y="757" width="3.4" height="15.0" fill="rgb(205,41,2)" rx="2" ry="2" />
<text  x="991.29" y="767.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.85%)</title><rect x="870.6" y="661" width="10.1" height="15.0" fill="rgb(219,76,36)" rx="2" ry="2" />
<text  x="873.63" y="671.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.28%)</title><rect x="178.1" y="645" width="3.4" height="15.0" fill="rgb(209,129,48)" rx="2" ry="2" />
<text  x="181.09" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (107 samples, 30.48%)</title><rect x="171.4" y="805" width="359.7" height="15.0" fill="rgb(213,90,21)" rx="2" ry="2" />
<text  x="174.37" y="815.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>tcp_packet (2 samples, 0.57%)</title><rect x="295.8" y="469" width="6.7" height="15.0" fill="rgb(228,88,43)" rx="2" ry="2" />
<text  x="298.75" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (27 samples, 7.69%)</title><rect x="67.2" y="789" width="90.7" height="15.0" fill="rgb(248,131,43)" rx="2" ry="2" />
<text  x="70.15" y="799.5" >do_syscall..</text>
</g>
<g >
<title>sock_poll (5 samples, 1.42%)</title><rect x="658.8" y="693" width="16.8" height="15.0" fill="rgb(221,53,26)" rx="2" ry="2" />
<text  x="661.83" y="703.5" ></text>
</g>
<g >
<title>ip_local_deliver (41 samples, 11.68%)</title><rect x="342.8" y="325" width="137.9" height="15.0" fill="rgb(224,205,51)" rx="2" ry="2" />
<text  x="345.82" y="335.5" >ip_local_deliver</text>
</g>
<g >
<title>skb_copy_datagram_iter (1 samples, 0.28%)</title><rect x="97.4" y="645" width="3.4" height="15.0" fill="rgb(244,121,48)" rx="2" ry="2" />
<text  x="100.41" y="655.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (3 samples, 0.85%)</title><rect x="716.0" y="693" width="10.1" height="15.0" fill="rgb(248,86,47)" rx="2" ry="2" />
<text  x="718.98" y="703.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.28%)</title><rect x="50.3" y="821" width="3.4" height="15.0" fill="rgb(205,164,21)" rx="2" ry="2" />
<text  x="53.34" y="831.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (3 samples, 0.85%)</title><rect x="1095.9" y="773" width="10.1" height="15.0" fill="rgb(243,195,52)" rx="2" ry="2" />
<text  x="1098.87" y="783.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (54 samples, 15.38%)</title><rect x="699.2" y="741" width="181.5" height="15.0" fill="rgb(221,51,32)" rx="2" ry="2" />
<text  x="702.17" y="751.5" >schedule_hrtimeout_range</text>
</g>
<g >
<title>__fget_light (1 samples, 0.28%)</title><rect x="1079.1" y="757" width="3.3" height="15.0" fill="rgb(228,12,8)" rx="2" ry="2" />
<text  x="1082.06" y="767.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.28%)</title><rect x="504.2" y="549" width="3.3" height="15.0" fill="rgb(223,93,31)" rx="2" ry="2" />
<text  x="507.19" y="559.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.85%)</title><rect x="10.0" y="805" width="10.1" height="15.0" fill="rgb(236,23,20)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (1 samples, 0.28%)</title><rect x="480.7" y="341" width="3.3" height="15.0" fill="rgb(240,66,13)" rx="2" ry="2" />
<text  x="483.66" y="351.5" ></text>
</g>
<g >
<title>update_curr (2 samples, 0.57%)</title><rect x="766.4" y="629" width="6.7" height="15.0" fill="rgb(208,95,38)" rx="2" ry="2" />
<text  x="769.41" y="639.5" ></text>
</g>
<g >
<title>dictGenHashFunction (1 samples, 0.28%)</title><rect x="13.4" y="789" width="3.3" height="15.0" fill="rgb(234,161,25)" rx="2" ry="2" />
<text  x="16.36" y="799.5" ></text>
</g>
<g >
<title>ip_local_out (76 samples, 21.65%)</title><rect x="248.7" y="549" width="255.5" height="15.0" fill="rgb(242,25,53)" rx="2" ry="2" />
<text  x="251.69" y="559.5" >ip_local_out</text>
</g>
<g >
<title>sys_epoll_ctl (2 samples, 0.57%)</title><rect x="1109.3" y="805" width="6.7" height="15.0" fill="rgb(246,71,16)" rx="2" ry="2" />
<text  x="1112.32" y="815.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (5 samples, 1.42%)</title><rect x="709.3" y="709" width="16.8" height="15.0" fill="rgb(231,97,44)" rx="2" ry="2" />
<text  x="712.26" y="719.5" ></text>
</g>
<g >
<title>vfs_open (1 samples, 0.28%)</title><rect x="981.6" y="741" width="3.3" height="15.0" fill="rgb(220,3,45)" rx="2" ry="2" />
<text  x="984.57" y="751.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (1 samples, 0.28%)</title><rect x="995.0" y="837" width="3.4" height="15.0" fill="rgb(219,108,46)" rx="2" ry="2" />
<text  x="998.01" y="847.5" ></text>
</g>
<g >
<title>tcp_write_xmit (84 samples, 23.93%)</title><rect x="231.9" y="597" width="282.4" height="15.0" fill="rgb(207,160,14)" rx="2" ry="2" />
<text  x="234.88" y="607.5" >tcp_write_xmit</text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.57%)</title><rect x="917.7" y="789" width="6.7" height="15.0" fill="rgb(246,169,5)" rx="2" ry="2" />
<text  x="920.69" y="799.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.57%)</title><rect x="591.6" y="757" width="6.7" height="15.0" fill="rgb(244,64,0)" rx="2" ry="2" />
<text  x="594.60" y="767.5" ></text>
</g>
<g >
<title>__fdget_pos (2 samples, 0.57%)</title><rect x="70.5" y="757" width="6.7" height="15.0" fill="rgb(207,224,46)" rx="2" ry="2" />
<text  x="73.51" y="767.5" ></text>
</g>
<g >
<title>__legitimize_mnt (1 samples, 0.28%)</title><rect x="978.2" y="661" width="3.4" height="15.0" fill="rgb(236,186,27)" rx="2" ry="2" />
<text  x="981.21" y="671.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.28%)</title><rect x="497.5" y="421" width="3.3" height="15.0" fill="rgb(210,71,5)" rx="2" ry="2" />
<text  x="500.46" y="431.5" ></text>
</g>
<g >
<title>rw_verify_area (6 samples, 1.71%)</title><rect x="137.7" y="741" width="20.2" height="15.0" fill="rgb(232,74,30)" rx="2" ry="2" />
<text  x="140.75" y="751.5" ></text>
</g>
<g >
<title>__strcasecmp_l_avx (1 samples, 0.28%)</title><rect x="10.0" y="789" width="3.4" height="15.0" fill="rgb(222,138,42)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>follow_managed (1 samples, 0.28%)</title><rect x="974.8" y="677" width="3.4" height="15.0" fill="rgb(205,53,31)" rx="2" ry="2" />
<text  x="977.84" y="687.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.28%)</title><rect x="100.8" y="661" width="3.3" height="15.0" fill="rgb(210,131,0)" rx="2" ry="2" />
<text  x="103.77" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (92 samples, 26.21%)</title><rect x="584.9" y="805" width="309.3" height="15.0" fill="rgb(246,68,22)" rx="2" ry="2" />
<text  x="587.87" y="815.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>ep_send_events_proc (11 samples, 3.13%)</title><rect x="638.7" y="725" width="36.9" height="15.0" fill="rgb(206,51,10)" rx="2" ry="2" />
<text  x="641.66" y="735.5" >ep_..</text>
</g>
<g >
<title>read_tsc (1 samples, 0.28%)</title><rect x="689.1" y="725" width="3.4" height="15.0" fill="rgb(250,133,36)" rx="2" ry="2" />
<text  x="692.09" y="735.5" ></text>
</g>
<g >
<title>tcp_pkt_to_tuple (1 samples, 0.28%)</title><rect x="292.4" y="453" width="3.4" height="15.0" fill="rgb(218,148,51)" rx="2" ry="2" />
<text  x="295.39" y="463.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (4 samples, 1.14%)</title><rect x="194.9" y="629" width="13.4" height="15.0" fill="rgb(219,44,50)" rx="2" ry="2" />
<text  x="197.90" y="639.5" ></text>
</g>
<g >
<title>ll2string (1 samples, 0.28%)</title><rect x="1149.7" y="837" width="3.3" height="15.0" fill="rgb(221,164,17)" rx="2" ry="2" />
<text  x="1152.66" y="847.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.28%)</title><rect x="635.3" y="725" width="3.4" height="15.0" fill="rgb(248,51,47)" rx="2" ry="2" />
<text  x="638.30" y="735.5" ></text>
</g>
<g >
<title>ip_finish_output (58 samples, 16.52%)</title><rect x="309.2" y="517" width="195.0" height="15.0" fill="rgb(238,183,51)" rx="2" ry="2" />
<text  x="312.20" y="527.5" >ip_finish_output</text>
</g>
<g >
<title>aeProcessEvents (3 samples, 0.85%)</title><rect x="23.4" y="805" width="10.1" height="15.0" fill="rgb(238,68,44)" rx="2" ry="2" />
<text  x="26.45" y="815.5" ></text>
</g>
<g >
<title>tryResizeHashTables (1 samples, 0.28%)</title><rect x="1173.2" y="837" width="3.4" height="15.0" fill="rgb(229,107,43)" rx="2" ry="2" />
<text  x="1176.19" y="847.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.28%)</title><rect x="1082.4" y="773" width="3.4" height="15.0" fill="rgb(244,59,46)" rx="2" ry="2" />
<text  x="1085.42" y="783.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.28%)</title><rect x="1092.5" y="773" width="3.4" height="15.0" fill="rgb(251,129,42)" rx="2" ry="2" />
<text  x="1095.51" y="783.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (2 samples, 0.57%)</title><rect x="453.8" y="245" width="6.7" height="15.0" fill="rgb(205,161,19)" rx="2" ry="2" />
<text  x="456.76" y="255.5" ></text>
</g>
<g >
<title>dictNext (3 samples, 0.85%)</title><rect x="1042.1" y="837" width="10.1" height="15.0" fill="rgb(247,66,29)" rx="2" ry="2" />
<text  x="1045.08" y="847.5" ></text>
</g>
<g >
<title>je_malloc_usable_size (1 samples, 0.28%)</title><rect x="1146.3" y="837" width="3.4" height="15.0" fill="rgb(239,216,28)" rx="2" ry="2" />
<text  x="1149.30" y="847.5" ></text>
</g>
<g >
<title>__open64 (15 samples, 4.27%)</title><rect x="941.2" y="837" width="50.5" height="15.0" fill="rgb(207,109,12)" rx="2" ry="2" />
<text  x="944.23" y="847.5" >__ope..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.28%)</title><rect x="1166.5" y="789" width="3.3" height="15.0" fill="rgb(247,37,13)" rx="2" ry="2" />
<text  x="1169.47" y="799.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.28%)</title><rect x="531.1" y="805" width="3.3" height="15.0" fill="rgb(221,74,34)" rx="2" ry="2" />
<text  x="534.08" y="815.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.57%)</title><rect x="494.1" y="453" width="6.7" height="15.0" fill="rgb(209,176,24)" rx="2" ry="2" />
<text  x="497.10" y="463.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.28%)</title><rect x="769.8" y="613" width="3.3" height="15.0" fill="rgb(222,210,41)" rx="2" ry="2" />
<text  x="772.77" y="623.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.57%)</title><rect x="591.6" y="741" width="6.7" height="15.0" fill="rgb(208,171,41)" rx="2" ry="2" />
<text  x="594.60" y="751.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.57%)</title><rect x="70.5" y="741" width="6.7" height="15.0" fill="rgb(213,143,10)" rx="2" ry="2" />
<text  x="73.51" y="751.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (47 samples, 13.39%)</title><rect x="326.0" y="437" width="158.0" height="15.0" fill="rgb(254,93,21)" rx="2" ry="2" />
<text  x="329.01" y="447.5" >__softirqentry_text_..</text>
</g>
<g >
<title>__check_object_size (1 samples, 0.28%)</title><rect x="984.9" y="709" width="3.4" height="15.0" fill="rgb(249,158,24)" rx="2" ry="2" />
<text  x="987.93" y="719.5" ></text>
</g>
<g >
<title>enqueue_task_fair (9 samples, 2.56%)</title><rect x="406.7" y="85" width="30.3" height="15.0" fill="rgb(211,83,31)" rx="2" ry="2" />
<text  x="409.70" y="95.5" >en..</text>
</g>
<g >
<title>tcp_v4_do_rcv (30 samples, 8.55%)</title><rect x="359.6" y="277" width="100.9" height="15.0" fill="rgb(218,129,31)" rx="2" ry="2" />
<text  x="362.63" y="287.5" >tcp_v4_do_rcv</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.57%)</title><rect x="201.6" y="613" width="6.7" height="15.0" fill="rgb(213,196,43)" rx="2" ry="2" />
<text  x="204.62" y="623.5" ></text>
</g>
<g >
<title>dequeue_entity (5 samples, 1.42%)</title><rect x="759.7" y="645" width="16.8" height="15.0" fill="rgb(216,91,10)" rx="2" ry="2" />
<text  x="762.69" y="655.5" ></text>
</g>
<g >
<title>activeExpireCycle (1 samples, 0.28%)</title><rect x="20.1" y="805" width="3.3" height="15.0" fill="rgb(233,42,46)" rx="2" ry="2" />
<text  x="23.09" y="815.5" ></text>
</g>
<g >
<title>tcp_current_mss (1 samples, 0.28%)</title><rect x="228.5" y="629" width="3.4" height="15.0" fill="rgb(223,69,2)" rx="2" ry="2" />
<text  x="231.52" y="639.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.28%)</title><rect x="1166.5" y="757" width="3.3" height="15.0" fill="rgb(243,124,42)" rx="2" ry="2" />
<text  x="1169.47" y="767.5" ></text>
</g>
<g >
<title>do_filp_open (12 samples, 3.42%)</title><rect x="944.6" y="757" width="40.3" height="15.0" fill="rgb(210,70,17)" rx="2" ry="2" />
<text  x="947.59" y="767.5" >do_..</text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.28%)</title><rect x="393.2" y="229" width="3.4" height="15.0" fill="rgb(248,147,42)" rx="2" ry="2" />
<text  x="396.25" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.28%)</title><rect x="705.9" y="709" width="3.4" height="15.0" fill="rgb(241,130,29)" rx="2" ry="2" />
<text  x="708.90" y="719.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (3 samples, 0.85%)</title><rect x="964.8" y="677" width="10.0" height="15.0" fill="rgb(215,101,19)" rx="2" ry="2" />
<text  x="967.76" y="687.5" ></text>
</g>
<g >
<title>activeExpireCycle (1 samples, 0.28%)</title><rect x="1001.7" y="837" width="3.4" height="15.0" fill="rgb(247,185,17)" rx="2" ry="2" />
<text  x="1004.74" y="847.5" ></text>
</g>
<g >
<title>default_wake_function (15 samples, 4.27%)</title><rect x="403.3" y="149" width="50.5" height="15.0" fill="rgb(250,222,18)" rx="2" ry="2" />
<text  x="406.33" y="159.5" >defau..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.28%)</title><rect x="618.5" y="741" width="3.4" height="15.0" fill="rgb(230,228,39)" rx="2" ry="2" />
<text  x="621.49" y="751.5" ></text>
</g>
<g >
<title>update_cfs_group (2 samples, 0.57%)</title><rect x="759.7" y="629" width="6.7" height="15.0" fill="rgb(243,38,11)" rx="2" ry="2" />
<text  x="762.69" y="639.5" ></text>
</g>
<g >
<title>____fput (2 samples, 0.57%)</title><rect x="917.7" y="757" width="6.7" height="15.0" fill="rgb(208,71,50)" rx="2" ry="2" />
<text  x="920.69" y="767.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (3 samples, 0.85%)</title><rect x="749.6" y="677" width="10.1" height="15.0" fill="rgb(243,10,15)" rx="2" ry="2" />
<text  x="752.60" y="687.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.28%)</title><rect x="773.1" y="629" width="3.4" height="15.0" fill="rgb(240,120,1)" rx="2" ry="2" />
<text  x="776.13" y="639.5" ></text>
</g>
<g >
<title>__libc_write (111 samples, 31.62%)</title><rect x="161.3" y="821" width="373.1" height="15.0" fill="rgb(212,70,23)" rx="2" ry="2" />
<text  x="164.28" y="831.5" >__libc_write</text>
</g>
<g >
<title>beforeSleep (3 samples, 0.85%)</title><rect x="33.5" y="805" width="10.1" height="15.0" fill="rgb(215,154,4)" rx="2" ry="2" />
<text  x="36.53" y="815.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (1 samples, 0.28%)</title><rect x="20.1" y="789" width="3.3" height="15.0" fill="rgb(227,202,11)" rx="2" ry="2" />
<text  x="23.09" y="799.5" ></text>
</g>
<g >
<title>seq_put_decimal_ull (2 samples, 0.57%)</title><rect x="124.3" y="661" width="6.7" height="15.0" fill="rgb(240,100,54)" rx="2" ry="2" />
<text  x="127.30" y="671.5" ></text>
</g>
<g >
<title>ip_rcv_finish (41 samples, 11.68%)</title><rect x="342.8" y="341" width="137.9" height="15.0" fill="rgb(231,134,14)" rx="2" ry="2" />
<text  x="345.82" y="351.5" >ip_rcv_finish</text>
</g>
<g >
<title>do_syscall_64 (91 samples, 25.93%)</title><rect x="588.2" y="789" width="306.0" height="15.0" fill="rgb(231,68,10)" rx="2" ry="2" />
<text  x="591.23" y="799.5" >do_syscall_64</text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.28%)</title><rect x="295.8" y="453" width="3.3" height="15.0" fill="rgb(233,201,7)" rx="2" ry="2" />
<text  x="298.75" y="463.5" ></text>
</g>
<g >
<title>try_to_wake_up (15 samples, 4.27%)</title><rect x="403.3" y="133" width="50.5" height="15.0" fill="rgb(217,126,52)" rx="2" ry="2" />
<text  x="406.33" y="143.5" >try_t..</text>
</g>
<g >
<title>zmalloc_used_memory (1 samples, 0.28%)</title><rect x="1186.6" y="837" width="3.4" height="15.0" fill="rgb(243,173,23)" rx="2" ry="2" />
<text  x="1189.64" y="847.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.28%)</title><rect x="134.4" y="741" width="3.3" height="15.0" fill="rgb(234,177,39)" rx="2" ry="2" />
<text  x="137.39" y="751.5" ></text>
</g>
<g >
<title>dev_queue_xmit (6 samples, 1.71%)</title><rect x="484.0" y="485" width="20.2" height="15.0" fill="rgb(252,33,39)" rx="2" ry="2" />
<text  x="487.02" y="495.5" ></text>
</g>
<g >
<title>getname_flags (1 samples, 0.28%)</title><rect x="984.9" y="741" width="3.4" height="15.0" fill="rgb(226,104,3)" rx="2" ry="2" />
<text  x="987.93" y="751.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.28%)</title><rect x="944.6" y="677" width="3.3" height="15.0" fill="rgb(242,84,37)" rx="2" ry="2" />
<text  x="947.59" y="687.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.28%)</title><rect x="729.4" y="661" width="3.4" height="15.0" fill="rgb(226,65,2)" rx="2" ry="2" />
<text  x="732.43" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 3.70%)</title><rect x="1065.6" y="805" width="43.7" height="15.0" fill="rgb(249,125,52)" rx="2" ry="2" />
<text  x="1068.61" y="815.5" >do_s..</text>
</g>
<g >
<title>[unknown] (12 samples, 3.42%)</title><rect x="10.0" y="821" width="40.3" height="15.0" fill="rgb(246,30,42)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >[un..</text>
</g>
<g >
<title>addReplyBulkLen (5 samples, 1.42%)</title><rect x="554.6" y="821" width="16.8" height="15.0" fill="rgb(226,169,40)" rx="2" ry="2" />
<text  x="557.62" y="831.5" ></text>
</g>
<g >
<title>update_load_avg (3 samples, 0.85%)</title><rect x="426.9" y="53" width="10.1" height="15.0" fill="rgb(220,106,45)" rx="2" ry="2" />
<text  x="429.87" y="63.5" ></text>
</g>
<g >
<title>je_malloc (5 samples, 1.42%)</title><rect x="1129.5" y="837" width="16.8" height="15.0" fill="rgb(219,150,21)" rx="2" ry="2" />
<text  x="1132.49" y="847.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.28%)</title><rect x="732.8" y="693" width="3.4" height="15.0" fill="rgb(207,15,8)" rx="2" ry="2" />
<text  x="735.79" y="703.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.28%)</title><rect x="507.5" y="533" width="3.4" height="15.0" fill="rgb(220,60,11)" rx="2" ry="2" />
<text  x="510.55" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 4.56%)</title><rect x="1062.3" y="821" width="53.7" height="15.0" fill="rgb(207,142,36)" rx="2" ry="2" />
<text  x="1065.25" y="831.5" >entry..</text>
</g>
<g >
<title>ipt_do_table (2 samples, 0.57%)</title><rect x="268.9" y="485" width="6.7" height="15.0" fill="rgb(249,138,3)" rx="2" ry="2" />
<text  x="271.86" y="495.5" ></text>
</g>
<g >
<title>_addReplyToBuffer (1 samples, 0.28%)</title><rect x="544.5" y="821" width="3.4" height="15.0" fill="rgb(233,88,32)" rx="2" ry="2" />
<text  x="547.53" y="831.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.28%)</title><rect x="147.8" y="709" width="3.4" height="15.0" fill="rgb(220,179,49)" rx="2" ry="2" />
<text  x="150.83" y="719.5" ></text>
</g>
<g >
<title>sock_recvmsg (5 samples, 1.42%)</title><rect x="87.3" y="693" width="16.8" height="15.0" fill="rgb(236,143,5)" rx="2" ry="2" />
<text  x="90.32" y="703.5" ></text>
</g>
<g >
<title>inet_recvmsg (4 samples, 1.14%)</title><rect x="87.3" y="677" width="13.5" height="15.0" fill="rgb(220,132,41)" rx="2" ry="2" />
<text  x="90.32" y="687.5" ></text>
</g>
<g >
<title>__kmalloc_node (1 samples, 0.28%)</title><rect x="104.1" y="693" width="3.4" height="15.0" fill="rgb(251,52,36)" rx="2" ry="2" />
<text  x="107.13" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.57%)</title><rect x="917.7" y="821" width="6.7" height="15.0" fill="rgb(250,160,1)" rx="2" ry="2" />
<text  x="920.69" y="831.5" ></text>
</g>
<g >
<title>sys_openat (14 samples, 3.99%)</title><rect x="944.6" y="789" width="47.1" height="15.0" fill="rgb(213,50,31)" rx="2" ry="2" />
<text  x="947.59" y="799.5" >sys_..</text>
</g>
<g >
<title>dequeue_task_fair (5 samples, 1.42%)</title><rect x="759.7" y="661" width="16.8" height="15.0" fill="rgb(225,216,27)" rx="2" ry="2" />
<text  x="762.69" y="671.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1 samples, 0.28%)</title><rect x="510.9" y="581" width="3.4" height="15.0" fill="rgb(220,219,42)" rx="2" ry="2" />
<text  x="513.91" y="591.5" ></text>
</g>
<g >
<title>process_backlog (47 samples, 13.39%)</title><rect x="326.0" y="405" width="158.0" height="15.0" fill="rgb(217,196,33)" rx="2" ry="2" />
<text  x="329.01" y="415.5" >process_backlog</text>
</g>
<g >
<title>ipv4_conntrack_local (6 samples, 1.71%)</title><rect x="248.7" y="517" width="20.2" height="15.0" fill="rgb(252,54,16)" rx="2" ry="2" />
<text  x="251.69" y="527.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (2 samples, 0.57%)</title><rect x="282.3" y="469" width="6.7" height="15.0" fill="rgb(214,49,17)" rx="2" ry="2" />
<text  x="285.31" y="479.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (48 samples, 13.68%)</title><rect x="322.6" y="469" width="161.4" height="15.0" fill="rgb(230,229,18)" rx="2" ry="2" />
<text  x="325.65" y="479.5" >do_softirq.part.17</text>
</g>
<g >
<title>num_to_str (2 samples, 0.57%)</title><rect x="124.3" y="645" width="6.7" height="15.0" fill="rgb(220,177,29)" rx="2" ry="2" />
<text  x="127.30" y="655.5" ></text>
</g>
<g >
<title>lookupKeyRead (1 samples, 0.28%)</title><rect x="907.6" y="821" width="3.4" height="15.0" fill="rgb(225,106,21)" rx="2" ry="2" />
<text  x="910.61" y="831.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.28%)</title><rect x="695.8" y="741" width="3.4" height="15.0" fill="rgb(231,201,10)" rx="2" ry="2" />
<text  x="698.81" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3 samples, 0.85%)</title><rect x="625.2" y="725" width="10.1" height="15.0" fill="rgb(249,148,52)" rx="2" ry="2" />
<text  x="628.21" y="735.5" ></text>
</g>
<g >
<title>activate_task (10 samples, 2.85%)</title><rect x="403.3" y="101" width="33.7" height="15.0" fill="rgb(240,68,29)" rx="2" ry="2" />
<text  x="406.33" y="111.5" >ac..</text>
</g>
<g >
<title>new_sync_write (103 samples, 29.34%)</title><rect x="178.1" y="725" width="346.3" height="15.0" fill="rgb(207,14,2)" rx="2" ry="2" />
<text  x="181.09" y="735.5" >new_sync_write</text>
</g>
<g >
<title>processCommand (1 samples, 0.28%)</title><rect x="1163.1" y="837" width="3.4" height="15.0" fill="rgb(216,51,7)" rx="2" ry="2" />
<text  x="1166.11" y="847.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.28%)</title><rect x="951.3" y="693" width="3.4" height="15.0" fill="rgb(209,128,9)" rx="2" ry="2" />
<text  x="954.31" y="703.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (1 samples, 0.28%)</title><rect x="756.3" y="629" width="3.4" height="15.0" fill="rgb(248,29,6)" rx="2" ry="2" />
<text  x="759.32" y="639.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.28%)</title><rect x="191.5" y="629" width="3.4" height="15.0" fill="rgb(242,52,10)" rx="2" ry="2" />
<text  x="194.54" y="639.5" ></text>
</g>
<g >
<title>__GI_____strtoll_l_internal (1 samples, 0.28%)</title><rect x="914.3" y="837" width="3.4" height="15.0" fill="rgb(227,22,52)" rx="2" ry="2" />
<text  x="917.33" y="847.5" ></text>
</g>
<g >
<title>_addReplyToBuffer (1 samples, 0.28%)</title><rect x="998.4" y="837" width="3.3" height="15.0" fill="rgb(208,77,4)" rx="2" ry="2" />
<text  x="1001.38" y="847.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.28%)</title><rect x="450.4" y="85" width="3.4" height="15.0" fill="rgb(227,102,5)" rx="2" ry="2" />
<text  x="453.40" y="95.5" ></text>
</g>
<g >
<title>__update_load_avg_se.isra.37 (1 samples, 0.28%)</title><rect x="773.1" y="613" width="3.4" height="15.0" fill="rgb(220,202,23)" rx="2" ry="2" />
<text  x="776.13" y="623.5" ></text>
</g>
<g >
<title>__wake_up_common (15 samples, 4.27%)</title><rect x="403.3" y="181" width="50.5" height="15.0" fill="rgb(232,229,2)" rx="2" ry="2" />
<text  x="406.33" y="191.5" >__wak..</text>
</g>
<g >
<title>epoll_ctl (19 samples, 5.41%)</title><rect x="1052.2" y="837" width="63.8" height="15.0" fill="rgb(243,44,6)" rx="2" ry="2" />
<text  x="1055.17" y="847.5" >epoll_ctl</text>
</g>
<g >
<title>clientsCron (1 samples, 0.28%)</title><rect x="1035.4" y="837" width="3.3" height="15.0" fill="rgb(232,72,33)" rx="2" ry="2" />
<text  x="1038.36" y="847.5" ></text>
</g>
<g >
<title>kfree_skbmem (2 samples, 0.57%)</title><rect x="90.7" y="629" width="6.7" height="15.0" fill="rgb(218,127,34)" rx="2" ry="2" />
<text  x="93.68" y="639.5" ></text>
</g>
<g >
<title>do_sys_open (14 samples, 3.99%)</title><rect x="944.6" y="773" width="47.1" height="15.0" fill="rgb(225,116,3)" rx="2" ry="2" />
<text  x="947.59" y="783.5" >do_s..</text>
</g>
<g >
<title>load_balance (6 samples, 1.71%)</title><rect x="847.1" y="661" width="20.2" height="15.0" fill="rgb(223,89,24)" rx="2" ry="2" />
<text  x="850.09" y="671.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.57%)</title><rect x="591.6" y="725" width="6.7" height="15.0" fill="rgb(237,143,47)" rx="2" ry="2" />
<text  x="594.60" y="735.5" ></text>
</g>
<g >
<title>tcp_in_window (1 samples, 0.28%)</title><rect x="299.1" y="453" width="3.4" height="15.0" fill="rgb(236,198,36)" rx="2" ry="2" />
<text  x="302.12" y="463.5" ></text>
</g>
<g >
<title>je_free (1 samples, 0.28%)</title><rect x="16.7" y="789" width="3.4" height="15.0" fill="rgb(249,145,47)" rx="2" ry="2" />
<text  x="19.72" y="799.5" ></text>
</g>
<g >
<title>sock_write_iter (103 samples, 29.34%)</title><rect x="178.1" y="709" width="346.3" height="15.0" fill="rgb(237,185,48)" rx="2" ry="2" />
<text  x="181.09" y="719.5" >sock_write_iter</text>
</g>
<g >
<title>mutex_lock (1 samples, 0.28%)</title><rect x="675.6" y="725" width="3.4" height="15.0" fill="rgb(224,203,13)" rx="2" ry="2" />
<text  x="678.64" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (107 samples, 30.48%)</title><rect x="171.4" y="789" width="359.7" height="15.0" fill="rgb(238,224,44)" rx="2" ry="2" />
<text  x="174.37" y="799.5" >do_syscall_64</text>
</g>
<g >
<title>__perf_event_task_sched_in (20 samples, 5.70%)</title><rect x="776.5" y="661" width="67.2" height="15.0" fill="rgb(205,153,25)" rx="2" ry="2" />
<text  x="779.50" y="671.5" >__perf_..</text>
</g>
<g >
<title>__update_load_avg_se.isra.37 (1 samples, 0.28%)</title><rect x="433.6" y="37" width="3.4" height="15.0" fill="rgb(222,43,28)" rx="2" ry="2" />
<text  x="436.59" y="47.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.57%)</title><rect x="884.1" y="757" width="6.7" height="15.0" fill="rgb(242,141,50)" rx="2" ry="2" />
<text  x="887.07" y="767.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.28%)</title><rect x="1166.5" y="821" width="3.3" height="15.0" fill="rgb(221,70,1)" rx="2" ry="2" />
<text  x="1169.47" y="831.5" ></text>
</g>
<g >
<title>aeProcessEvents (4 samples, 1.14%)</title><rect x="1018.5" y="837" width="13.5" height="15.0" fill="rgb(222,10,38)" rx="2" ry="2" />
<text  x="1021.55" y="847.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1 samples, 0.28%)</title><rect x="507.5" y="565" width="3.4" height="15.0" fill="rgb(234,151,36)" rx="2" ry="2" />
<text  x="510.55" y="575.5" ></text>
</g>
<g >
<title>__remove_hrtimer (2 samples, 0.57%)</title><rect x="726.1" y="693" width="6.7" height="15.0" fill="rgb(226,98,1)" rx="2" ry="2" />
<text  x="729.07" y="703.5" ></text>
</g>
<g >
<title>tcp_ack (9 samples, 2.56%)</title><rect x="366.4" y="245" width="30.2" height="15.0" fill="rgb(218,95,7)" rx="2" ry="2" />
<text  x="369.35" y="255.5" >tc..</text>
</g>
<g >
<title>ip_finish_output2 (57 samples, 16.24%)</title><rect x="312.6" y="501" width="191.6" height="15.0" fill="rgb(233,54,3)" rx="2" ry="2" />
<text  x="315.56" y="511.5" >ip_finish_output2</text>
</g>
<g >
<title>dput (1 samples, 0.28%)</title><rect x="958.0" y="693" width="3.4" height="15.0" fill="rgb(239,90,19)" rx="2" ry="2" />
<text  x="961.03" y="703.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.28%)</title><rect x="947.9" y="693" width="3.4" height="15.0" fill="rgb(231,150,30)" rx="2" ry="2" />
<text  x="950.95" y="703.5" ></text>
</g>
<g >
<title>flushAppendOnlyFile (1 samples, 0.28%)</title><rect x="43.6" y="805" width="3.4" height="15.0" fill="rgb(212,170,35)" rx="2" ry="2" />
<text  x="46.62" y="815.5" ></text>
</g>
<g >
<title>native_write_msr (14 samples, 3.99%)</title><rect x="793.3" y="597" width="47.1" height="15.0" fill="rgb(241,196,51)" rx="2" ry="2" />
<text  x="796.30" y="607.5" >nati..</text>
</g>
<g >
<title>processInputBuffer (1 samples, 0.28%)</title><rect x="1166.5" y="837" width="3.3" height="15.0" fill="rgb(213,158,49)" rx="2" ry="2" />
<text  x="1169.47" y="847.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.40 (1 samples, 0.28%)</title><rect x="389.9" y="213" width="3.3" height="15.0" fill="rgb(242,93,40)" rx="2" ry="2" />
<text  x="392.89" y="223.5" ></text>
</g>
<g >
<title>tcp_sendmsg (103 samples, 29.34%)</title><rect x="178.1" y="661" width="346.3" height="15.0" fill="rgb(228,184,17)" rx="2" ry="2" />
<text  x="181.09" y="671.5" >tcp_sendmsg</text>
</g>
<g >
<title>proc_single_show (7 samples, 1.99%)</title><rect x="110.9" y="709" width="23.5" height="15.0" fill="rgb(232,161,42)" rx="2" ry="2" />
<text  x="113.85" y="719.5" >p..</text>
</g>
<g >
<title>security_file_permission (4 samples, 1.14%)</title><rect x="144.5" y="725" width="13.4" height="15.0" fill="rgb(206,22,17)" rx="2" ry="2" />
<text  x="147.47" y="735.5" ></text>
</g>
<g >
<title>do_task_stat (6 samples, 1.71%)</title><rect x="110.9" y="677" width="20.1" height="15.0" fill="rgb(234,96,28)" rx="2" ry="2" />
<text  x="113.85" y="687.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (1 samples, 0.28%)</title><rect x="1035.4" y="821" width="3.3" height="15.0" fill="rgb(218,195,22)" rx="2" ry="2" />
<text  x="1038.36" y="831.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.28%)</title><rect x="450.4" y="69" width="3.4" height="15.0" fill="rgb(252,55,20)" rx="2" ry="2" />
<text  x="453.40" y="79.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.28%)</title><rect x="107.5" y="709" width="3.4" height="15.0" fill="rgb(207,203,53)" rx="2" ry="2" />
<text  x="110.49" y="719.5" ></text>
</g>
<g >
<title>check_preempt_curr (3 samples, 0.85%)</title><rect x="437.0" y="85" width="10.0" height="15.0" fill="rgb(214,148,26)" rx="2" ry="2" />
<text  x="439.95" y="95.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (6 samples, 1.71%)</title><rect x="484.0" y="469" width="20.2" height="15.0" fill="rgb(249,228,26)" rx="2" ry="2" />
<text  x="487.02" y="479.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1 samples, 0.28%)</title><rect x="100.8" y="677" width="3.3" height="15.0" fill="rgb(241,194,16)" rx="2" ry="2" />
<text  x="103.77" y="687.5" ></text>
</g>
<g >
<title>getname (1 samples, 0.28%)</title><rect x="984.9" y="757" width="3.4" height="15.0" fill="rgb(214,55,42)" rx="2" ry="2" />
<text  x="987.93" y="767.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.28%)</title><rect x="534.4" y="821" width="3.4" height="15.0" fill="rgb(224,72,3)" rx="2" ry="2" />
<text  x="537.44" y="831.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.28%)</title><rect x="73.9" y="725" width="3.3" height="15.0" fill="rgb(210,13,12)" rx="2" ry="2" />
<text  x="76.87" y="735.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.28%)</title><rect x="309.2" y="501" width="3.4" height="15.0" fill="rgb(239,104,50)" rx="2" ry="2" />
<text  x="312.20" y="511.5" ></text>
</g>
<g >
<title>tcp_recvmsg (4 samples, 1.14%)</title><rect x="87.3" y="661" width="13.5" height="15.0" fill="rgb(249,40,47)" rx="2" ry="2" />
<text  x="90.32" y="671.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.28%)</title><rect x="114.2" y="661" width="3.4" height="15.0" fill="rgb(222,170,31)" rx="2" ry="2" />
<text  x="117.22" y="671.5" ></text>
</g>
<g >
<title>dictFingerprint (1 samples, 0.28%)</title><rect x="1038.7" y="837" width="3.4" height="15.0" fill="rgb(243,145,34)" rx="2" ry="2" />
<text  x="1041.72" y="847.5" ></text>
</g>
<g >
<title>find_busiest_group (6 samples, 1.71%)</title><rect x="847.1" y="645" width="20.2" height="15.0" fill="rgb(212,205,54)" rx="2" ry="2" />
<text  x="850.09" y="655.5" ></text>
</g>
<g >
<title>inet_sendmsg (103 samples, 29.34%)</title><rect x="178.1" y="677" width="346.3" height="15.0" fill="rgb(219,79,22)" rx="2" ry="2" />
<text  x="181.09" y="687.5" >inet_sendmsg</text>
</g>
<g >
<title>ipv4_conntrack_local (10 samples, 2.85%)</title><rect x="275.6" y="501" width="33.6" height="15.0" fill="rgb(220,178,31)" rx="2" ry="2" />
<text  x="278.58" y="511.5" >ip..</text>
</g>
<g >
<title>ktime_get_ts64 (1 samples, 0.28%)</title><rect x="890.8" y="757" width="3.4" height="15.0" fill="rgb(208,155,32)" rx="2" ry="2" />
<text  x="893.80" y="767.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.28%)</title><rect x="927.8" y="837" width="3.3" height="15.0" fill="rgb(236,155,40)" rx="2" ry="2" />
<text  x="930.78" y="847.5" ></text>
</g>
<g >
<title>pollwake (15 samples, 4.27%)</title><rect x="403.3" y="165" width="50.5" height="15.0" fill="rgb(250,148,51)" rx="2" ry="2" />
<text  x="406.33" y="175.5" >pollw..</text>
</g>
<g >
<title>proc_tgid_stat (7 samples, 1.99%)</title><rect x="110.9" y="693" width="23.5" height="15.0" fill="rgb(239,155,32)" rx="2" ry="2" />
<text  x="113.85" y="703.5" >p..</text>
</g>
<g >
<title>put_dec (1 samples, 0.28%)</title><rect x="127.7" y="629" width="3.3" height="15.0" fill="rgb(225,143,17)" rx="2" ry="2" />
<text  x="130.66" y="639.5" ></text>
</g>
<g >
<title>pick_next_task_fair (11 samples, 3.13%)</title><rect x="843.7" y="677" width="37.0" height="15.0" fill="rgb(253,164,28)" rx="2" ry="2" />
<text  x="846.73" y="687.5" >pic..</text>
</g>
<g >
<title>__tcp_transmit_skb (82 samples, 23.36%)</title><rect x="231.9" y="581" width="275.6" height="15.0" fill="rgb(218,9,5)" rx="2" ry="2" />
<text  x="234.88" y="591.5" >__tcp_transmit_skb</text>
</g>
<g >
<title>iptable_filter_hook (2 samples, 0.57%)</title><rect x="268.9" y="501" width="6.7" height="15.0" fill="rgb(250,224,48)" rx="2" ry="2" />
<text  x="271.86" y="511.5" ></text>
</g>
<g >
<title>call (1 samples, 0.28%)</title><rect x="574.8" y="821" width="3.3" height="15.0" fill="rgb(206,187,46)" rx="2" ry="2" />
<text  x="577.79" y="831.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.28%)</title><rect x="527.7" y="741" width="3.4" height="15.0" fill="rgb(226,213,48)" rx="2" ry="2" />
<text  x="530.72" y="751.5" ></text>
</g>
<g >
<title>iptable_filter_hook (2 samples, 0.57%)</title><rect x="467.2" y="293" width="6.7" height="15.0" fill="rgb(224,209,12)" rx="2" ry="2" />
<text  x="470.21" y="303.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (20 samples, 5.70%)</title><rect x="776.5" y="613" width="67.2" height="15.0" fill="rgb(212,81,3)" rx="2" ry="2" />
<text  x="779.50" y="623.5" >__intel..</text>
</g>
<g >
<title>addReplyLongLongWithPrefix (1 samples, 0.28%)</title><rect x="571.4" y="821" width="3.4" height="15.0" fill="rgb(248,167,17)" rx="2" ry="2" />
<text  x="574.42" y="831.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.28%)</title><rect x="477.3" y="309" width="3.4" height="15.0" fill="rgb(253,97,8)" rx="2" ry="2" />
<text  x="480.29" y="319.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (3 samples, 0.85%)</title><rect x="682.4" y="741" width="10.1" height="15.0" fill="rgb(216,185,14)" rx="2" ry="2" />
<text  x="685.36" y="751.5" ></text>
</g>
<g >
<title>tcp_push (1 samples, 0.28%)</title><rect x="181.5" y="645" width="3.3" height="15.0" fill="rgb(246,189,3)" rx="2" ry="2" />
<text  x="184.45" y="655.5" ></text>
</g>
<g >
<title>zfree (2 samples, 0.57%)</title><rect x="1176.6" y="837" width="6.7" height="15.0" fill="rgb(249,177,11)" rx="2" ry="2" />
<text  x="1179.55" y="847.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.28%)</title><rect x="736.2" y="677" width="3.3" height="15.0" fill="rgb(232,2,45)" rx="2" ry="2" />
<text  x="739.15" y="687.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (1 samples, 0.28%)</title><rect x="57.1" y="821" width="3.3" height="15.0" fill="rgb(211,29,28)" rx="2" ry="2" />
<text  x="60.07" y="831.5" ></text>
</g>
<g >
<title>task_work_run (2 samples, 0.57%)</title><rect x="917.7" y="773" width="6.7" height="15.0" fill="rgb(218,129,42)" rx="2" ry="2" />
<text  x="920.69" y="783.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.57%)</title><rect x="215.1" y="581" width="6.7" height="15.0" fill="rgb(213,89,50)" rx="2" ry="2" />
<text  x="218.07" y="591.5" ></text>
</g>
<g >
<title>__libc_read (30 samples, 8.55%)</title><rect x="60.4" y="821" width="100.9" height="15.0" fill="rgb(235,139,16)" rx="2" ry="2" />
<text  x="63.43" y="831.5" >__libc_read</text>
</g>
<g >
<title>schedule (42 samples, 11.97%)</title><rect x="739.5" y="709" width="141.2" height="15.0" fill="rgb(210,180,39)" rx="2" ry="2" />
<text  x="742.52" y="719.5" >schedule</text>
</g>
<g >
<title>__wake_up_sync_key (15 samples, 4.27%)</title><rect x="403.3" y="213" width="50.5" height="15.0" fill="rgb(229,140,23)" rx="2" ry="2" />
<text  x="406.33" y="223.5" >__wak..</text>
</g>
<g >
<title>gettimeofday@plt (1 samples, 0.28%)</title><rect x="47.0" y="805" width="3.3" height="15.0" fill="rgb(254,153,42)" rx="2" ry="2" />
<text  x="49.98" y="815.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.28%)</title><rect x="1028.6" y="805" width="3.4" height="15.0" fill="rgb(224,16,39)" rx="2" ry="2" />
<text  x="1031.63" y="815.5" ></text>
</g>
<g >
<title>readQueryFromClient (1 samples, 0.28%)</title><rect x="1169.8" y="837" width="3.4" height="15.0" fill="rgb(243,77,8)" rx="2" ry="2" />
<text  x="1172.83" y="847.5" ></text>
</g>
<g >
<title>tcp_poll (4 samples, 1.14%)</title><rect x="662.2" y="677" width="13.4" height="15.0" fill="rgb(246,81,36)" rx="2" ry="2" />
<text  x="665.19" y="687.5" ></text>
</g>
<g >
<title>timerqueue_add (2 samples, 0.57%)</title><rect x="719.3" y="677" width="6.8" height="15.0" fill="rgb(215,120,29)" rx="2" ry="2" />
<text  x="722.34" y="687.5" ></text>
</g>
<g >
<title>seq_read (9 samples, 2.56%)</title><rect x="104.1" y="725" width="30.3" height="15.0" fill="rgb(248,199,42)" rx="2" ry="2" />
<text  x="107.13" y="735.5" >se..</text>
</g>
<g >
<title>ipv4_helper (2 samples, 0.57%)</title><rect x="460.5" y="309" width="6.7" height="15.0" fill="rgb(239,197,39)" rx="2" ry="2" />
<text  x="463.48" y="319.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.28%)</title><rect x="157.9" y="805" width="3.4" height="15.0" fill="rgb(242,33,23)" rx="2" ry="2" />
<text  x="160.92" y="815.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.28%)</title><rect x="151.2" y="693" width="3.4" height="15.0" fill="rgb(209,100,30)" rx="2" ry="2" />
<text  x="154.20" y="703.5" ></text>
</g>
<g >
<title>nf_hook_slow (12 samples, 3.42%)</title><rect x="268.9" y="517" width="40.3" height="15.0" fill="rgb(240,6,14)" rx="2" ry="2" />
<text  x="271.86" y="527.5" >nf_..</text>
</g>
<g >
<title>__vdso_gettimeofday (3 samples, 0.85%)</title><rect x="23.4" y="789" width="10.1" height="15.0" fill="rgb(245,133,42)" rx="2" ry="2" />
<text  x="26.45" y="799.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.28%)</title><rect x="679.0" y="725" width="3.4" height="15.0" fill="rgb(209,127,26)" rx="2" ry="2" />
<text  x="682.00" y="735.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (46 samples, 13.11%)</title><rect x="329.4" y="373" width="154.6" height="15.0" fill="rgb(245,65,30)" rx="2" ry="2" />
<text  x="332.37" y="383.5" >__netif_receive_skb..</text>
</g>
<g >
<title>legitimize_mnt (1 samples, 0.28%)</title><rect x="961.4" y="693" width="3.4" height="15.0" fill="rgb(216,135,4)" rx="2" ry="2" />
<text  x="964.40" y="703.5" ></text>
</g>
<g >
<title>nf_conntrack_in (7 samples, 1.99%)</title><rect x="278.9" y="485" width="23.6" height="15.0" fill="rgb(210,151,33)" rx="2" ry="2" />
<text  x="281.95" y="495.5" >n..</text>
</g>
<g >
<title>__pthread_enable_asynccancel (2 samples, 0.57%)</title><rect x="537.8" y="821" width="6.7" height="15.0" fill="rgb(234,163,20)" rx="2" ry="2" />
<text  x="540.81" y="831.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (34 samples, 9.69%)</title><rect x="346.2" y="293" width="114.3" height="15.0" fill="rgb(238,193,15)" rx="2" ry="2" />
<text  x="349.18" y="303.5" >tcp_v4_rcv</text>
</g>
<g >
<title>tcp_clean_rtx_queue (6 samples, 1.71%)</title><rect x="373.1" y="229" width="20.1" height="15.0" fill="rgb(236,22,42)" rx="2" ry="2" />
<text  x="376.08" y="239.5" ></text>
</g>
<g >
<title>__vfs_read (16 samples, 4.56%)</title><rect x="80.6" y="741" width="53.8" height="15.0" fill="rgb(221,172,7)" rx="2" ry="2" />
<text  x="83.60" y="751.5" >__vfs..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.57%)</title><rect x="917.7" y="805" width="6.7" height="15.0" fill="rgb(214,111,34)" rx="2" ry="2" />
<text  x="920.69" y="815.5" ></text>
</g>
<g >
<title>ipv4_mtu (3 samples, 0.85%)</title><rect x="514.3" y="613" width="10.1" height="15.0" fill="rgb(219,9,41)" rx="2" ry="2" />
<text  x="517.27" y="623.5" ></text>
</g>
<g >
<title>x86_pmu_enable (20 samples, 5.70%)</title><rect x="776.5" y="645" width="67.2" height="15.0" fill="rgb(228,178,3)" rx="2" ry="2" />
<text  x="779.50" y="655.5" >x86_pmu..</text>
</g>
<g >
<title>ip_output (58 samples, 16.52%)</title><rect x="309.2" y="533" width="195.0" height="15.0" fill="rgb(237,172,24)" rx="2" ry="2" />
<text  x="312.20" y="543.5" >ip_output</text>
</g>
<g >
<title>finish_task_switch (20 samples, 5.70%)</title><rect x="776.5" y="677" width="67.2" height="15.0" fill="rgb(240,102,54)" rx="2" ry="2" />
<text  x="779.50" y="687.5" >finish_..</text>
</g>
<g >
<title>legitimize_path.isra.29 (1 samples, 0.28%)</title><rect x="978.2" y="677" width="3.4" height="15.0" fill="rgb(236,57,8)" rx="2" ry="2" />
<text  x="981.21" y="687.5" ></text>
</g>
<g >
<title>skb_release_data (5 samples, 1.42%)</title><rect x="373.1" y="181" width="16.8" height="15.0" fill="rgb(205,197,3)" rx="2" ry="2" />
<text  x="376.08" y="191.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (35 samples, 9.97%)</title><rect x="342.8" y="309" width="117.7" height="15.0" fill="rgb(207,225,12)" rx="2" ry="2" />
<text  x="345.82" y="319.5" >ip_local_deliv..</text>
</g>
<g >
<title>intel_pmu_enable_all (20 samples, 5.70%)</title><rect x="776.5" y="629" width="67.2" height="15.0" fill="rgb(242,151,52)" rx="2" ry="2" />
<text  x="779.50" y="639.5" >intel_p..</text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.28%)</title><rect x="352.9" y="277" width="3.4" height="15.0" fill="rgb(222,198,35)" rx="2" ry="2" />
<text  x="355.91" y="287.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (5 samples, 1.42%)</title><rect x="208.3" y="629" width="16.9" height="15.0" fill="rgb(210,109,54)" rx="2" ry="2" />
<text  x="211.35" y="639.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.28%)</title><rect x="958.0" y="677" width="3.4" height="15.0" fill="rgb(218,203,29)" rx="2" ry="2" />
<text  x="961.03" y="687.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (48 samples, 13.68%)</title><rect x="322.6" y="485" width="161.4" height="15.0" fill="rgb(229,62,25)" rx="2" ry="2" />
<text  x="325.65" y="495.5" >__local_bh_enable_ip</text>
</g>
<g >
<title>__nf_ct_l4proto_find (1 samples, 0.28%)</title><rect x="275.6" y="485" width="3.3" height="15.0" fill="rgb(211,57,43)" rx="2" ry="2" />
<text  x="278.58" y="495.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (2 samples, 0.57%)</title><rect x="215.1" y="597" width="6.7" height="15.0" fill="rgb(224,139,19)" rx="2" ry="2" />
<text  x="218.07" y="607.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.28%)</title><rect x="598.3" y="757" width="3.4" height="15.0" fill="rgb(218,11,45)" rx="2" ry="2" />
<text  x="601.32" y="767.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.28%)</title><rect x="100.8" y="645" width="3.3" height="15.0" fill="rgb(234,121,15)" rx="2" ry="2" />
<text  x="103.77" y="655.5" ></text>
</g>
<g >
<title>__close (2 samples, 0.57%)</title><rect x="917.7" y="837" width="6.7" height="15.0" fill="rgb(227,159,31)" rx="2" ry="2" />
<text  x="920.69" y="847.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (4 samples, 1.14%)</title><rect x="726.1" y="709" width="13.4" height="15.0" fill="rgb(213,175,1)" rx="2" ry="2" />
<text  x="729.07" y="719.5" ></text>
</g>
<g >
<title>prepareClientToWrite (1 samples, 0.28%)</title><rect x="911.0" y="821" width="3.3" height="15.0" fill="rgb(246,14,37)" rx="2" ry="2" />
<text  x="913.97" y="831.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.28%)</title><rect x="500.8" y="437" width="3.4" height="15.0" fill="rgb(230,160,5)" rx="2" ry="2" />
<text  x="503.83" y="447.5" ></text>
</g>
<g >
<title>lock_hrtimer_base.isra.19 (1 samples, 0.28%)</title><rect x="736.2" y="693" width="3.3" height="15.0" fill="rgb(212,200,53)" rx="2" ry="2" />
<text  x="739.15" y="703.5" ></text>
</g>
<g >
<title>inode_permission (1 samples, 0.28%)</title><rect x="954.7" y="709" width="3.3" height="15.0" fill="rgb(242,113,28)" rx="2" ry="2" />
<text  x="957.67" y="719.5" ></text>
</g>
<g >
<title>strncpy_from_user (1 samples, 0.28%)</title><rect x="984.9" y="725" width="3.4" height="15.0" fill="rgb(209,115,22)" rx="2" ry="2" />
<text  x="987.93" y="735.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.28%)</title><rect x="117.6" y="661" width="3.3" height="15.0" fill="rgb(217,9,33)" rx="2" ry="2" />
<text  x="120.58" y="671.5" ></text>
</g>
<g >
<title>path_openat (11 samples, 3.13%)</title><rect x="944.6" y="741" width="37.0" height="15.0" fill="rgb(215,36,2)" rx="2" ry="2" />
<text  x="947.59" y="751.5" >pat..</text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.28%)</title><rect x="356.3" y="277" width="3.3" height="15.0" fill="rgb(249,31,17)" rx="2" ry="2" />
<text  x="359.27" y="287.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.28%)</title><rect x="97.4" y="613" width="3.4" height="15.0" fill="rgb(234,184,33)" rx="2" ry="2" />
<text  x="100.41" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.57%)</title><rect x="1055.5" y="821" width="6.8" height="15.0" fill="rgb(237,69,43)" rx="2" ry="2" />
<text  x="1058.53" y="831.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.28%)</title><rect x="20.1" y="773" width="3.3" height="15.0" fill="rgb(228,35,19)" rx="2" ry="2" />
<text  x="23.09" y="783.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.28%)</title><rect x="984.9" y="693" width="3.4" height="15.0" fill="rgb(254,147,45)" rx="2" ry="2" />
<text  x="987.93" y="703.5" ></text>
</g>
<g >
<title>je_free (1 samples, 0.28%)</title><rect x="1126.1" y="837" width="3.4" height="15.0" fill="rgb(232,197,0)" rx="2" ry="2" />
<text  x="1129.13" y="847.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.28%)</title><rect x="1079.1" y="741" width="3.3" height="15.0" fill="rgb(250,197,49)" rx="2" ry="2" />
<text  x="1082.06" y="751.5" ></text>
</g>
<g >
<title>__sched_text_start (41 samples, 11.68%)</title><rect x="742.9" y="693" width="137.8" height="15.0" fill="rgb(213,98,38)" rx="2" ry="2" />
<text  x="745.88" y="703.5" >__sched_text_start</text>
</g>
<g >
<title>vfs_write (105 samples, 29.91%)</title><rect x="178.1" y="757" width="353.0" height="15.0" fill="rgb(237,65,18)" rx="2" ry="2" />
<text  x="181.09" y="767.5" >vfs_write</text>
</g>
<g >
<title>genericHgetallCommand (2 samples, 0.57%)</title><rect x="1119.4" y="837" width="6.7" height="15.0" fill="rgb(218,51,16)" rx="2" ry="2" />
<text  x="1122.40" y="847.5" ></text>
</g>
<g >
<title>tcp_rcv_established (30 samples, 8.55%)</title><rect x="359.6" y="261" width="100.9" height="15.0" fill="rgb(215,174,20)" rx="2" ry="2" />
<text  x="362.63" y="271.5" >tcp_rcv_esta..</text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.28%)</title><rect x="867.3" y="661" width="3.3" height="15.0" fill="rgb(222,66,0)" rx="2" ry="2" />
<text  x="870.26" y="671.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (15 samples, 4.27%)</title><rect x="403.3" y="197" width="50.5" height="15.0" fill="rgb(213,130,0)" rx="2" ry="2" />
<text  x="406.33" y="207.5" >__wak..</text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (1 samples, 0.28%)</title><rect x="507.5" y="549" width="3.4" height="15.0" fill="rgb(216,156,54)" rx="2" ry="2" />
<text  x="510.55" y="559.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.28%)</title><rect x="494.1" y="421" width="3.4" height="15.0" fill="rgb(241,189,6)" rx="2" ry="2" />
<text  x="497.10" y="431.5" ></text>
</g>
<g >
<title>__kfree_skb (5 samples, 1.42%)</title><rect x="373.1" y="213" width="16.8" height="15.0" fill="rgb(227,32,19)" rx="2" ry="2" />
<text  x="376.08" y="223.5" ></text>
</g>
<g >
<title>__kfree_skb (2 samples, 0.57%)</title><rect x="90.7" y="645" width="6.7" height="15.0" fill="rgb(209,116,15)" rx="2" ry="2" />
<text  x="93.68" y="655.5" ></text>
</g>
<g >
<title>addHashIteratorCursorToReply (2 samples, 0.57%)</title><rect x="1005.1" y="837" width="6.7" height="15.0" fill="rgb(214,74,26)" rx="2" ry="2" />
<text  x="1008.10" y="847.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.28%)</title><rect x="944.6" y="693" width="3.3" height="15.0" fill="rgb(221,167,43)" rx="2" ry="2" />
<text  x="947.59" y="703.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.28%)</title><rect x="1079.1" y="773" width="3.3" height="15.0" fill="rgb(231,36,18)" rx="2" ry="2" />
<text  x="1082.06" y="783.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.28%)</title><rect x="615.1" y="741" width="3.4" height="15.0" fill="rgb(235,113,44)" rx="2" ry="2" />
<text  x="618.13" y="751.5" ></text>
</g>
<g >
<title>ep_poll (84 samples, 23.93%)</title><rect x="601.7" y="757" width="282.4" height="15.0" fill="rgb(239,70,27)" rx="2" ry="2" />
<text  x="604.68" y="767.5" >ep_poll</text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.57%)</title><rect x="894.2" y="805" width="6.7" height="15.0" fill="rgb(220,80,32)" rx="2" ry="2" />
<text  x="897.16" y="815.5" ></text>
</g>
<g >
<title>sys_epoll_wait (91 samples, 25.93%)</title><rect x="588.2" y="773" width="306.0" height="15.0" fill="rgb(205,119,40)" rx="2" ry="2" />
<text  x="591.23" y="783.5" >sys_epoll_wait</text>
</g>
<g >
<title>select_estimate_accuracy (1 samples, 0.28%)</title><rect x="880.7" y="741" width="3.4" height="15.0" fill="rgb(207,88,35)" rx="2" ry="2" />
<text  x="883.71" y="751.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (13 samples, 3.70%)</title><rect x="1065.6" y="789" width="43.7" height="15.0" fill="rgb(227,46,40)" rx="2" ry="2" />
<text  x="1068.61" y="799.5" >sys_..</text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.28%)</title><rect x="756.3" y="661" width="3.4" height="15.0" fill="rgb(212,4,17)" rx="2" ry="2" />
<text  x="759.32" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 3.99%)</title><rect x="944.6" y="821" width="47.1" height="15.0" fill="rgb(211,62,51)" rx="2" ry="2" />
<text  x="947.59" y="831.5" >entr..</text>
</g>
<g >
<title>tcp_push (84 samples, 23.93%)</title><rect x="231.9" y="629" width="282.4" height="15.0" fill="rgb(221,133,35)" rx="2" ry="2" />
<text  x="234.88" y="639.5" >tcp_push</text>
</g>
<g >
<title>sched_clock (1 samples, 0.28%)</title><rect x="867.3" y="645" width="3.3" height="15.0" fill="rgb(216,122,8)" rx="2" ry="2" />
<text  x="870.26" y="655.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (2 samples, 0.57%)</title><rect x="783.2" y="597" width="6.7" height="15.0" fill="rgb(217,208,40)" rx="2" ry="2" />
<text  x="786.22" y="607.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.28%)</title><rect x="692.5" y="741" width="3.3" height="15.0" fill="rgb(205,225,33)" rx="2" ry="2" />
<text  x="695.45" y="751.5" ></text>
</g>
<g >
<title>deactivate_task (5 samples, 1.42%)</title><rect x="759.7" y="677" width="16.8" height="15.0" fill="rgb(241,72,15)" rx="2" ry="2" />
<text  x="762.69" y="687.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.28%)</title><rect x="524.4" y="741" width="3.3" height="15.0" fill="rgb(240,229,47)" rx="2" ry="2" />
<text  x="527.36" y="751.5" ></text>
</g>
<g >
<title>addReply (1 samples, 0.28%)</title><rect x="1011.8" y="837" width="3.4" height="15.0" fill="rgb(235,149,3)" rx="2" ry="2" />
<text  x="1014.82" y="847.5" ></text>
</g>
<g >
<title>resched_curr (1 samples, 0.28%)</title><rect x="443.7" y="69" width="3.3" height="15.0" fill="rgb(240,96,46)" rx="2" ry="2" />
<text  x="446.68" y="79.5" ></text>
</g>
<g >
<title>[[vdso]] (3 samples, 0.85%)</title><rect x="23.4" y="773" width="10.1" height="15.0" fill="rgb(247,214,5)" rx="2" ry="2" />
<text  x="26.45" y="783.5" ></text>
</g>
<g >
<title>sock_read_iter (5 samples, 1.42%)</title><rect x="87.3" y="709" width="16.8" height="15.0" fill="rgb(252,153,19)" rx="2" ry="2" />
<text  x="90.32" y="719.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.28%)</title><rect x="191.5" y="613" width="3.4" height="15.0" fill="rgb(215,209,26)" rx="2" ry="2" />
<text  x="194.54" y="623.5" ></text>
</g>
<g >
<title>security_file_alloc (1 samples, 0.28%)</title><rect x="951.3" y="709" width="3.4" height="15.0" fill="rgb(219,117,29)" rx="2" ry="2" />
<text  x="954.31" y="719.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (3 samples, 0.85%)</title><rect x="437.0" y="101" width="10.0" height="15.0" fill="rgb(254,34,50)" rx="2" ry="2" />
<text  x="439.95" y="111.5" ></text>
</g>
<g >
<title>loopback_xmit (2 samples, 0.57%)</title><rect x="494.1" y="437" width="6.7" height="15.0" fill="rgb(235,189,3)" rx="2" ry="2" />
<text  x="497.10" y="447.5" ></text>
</g>
<g >
<title>walk_component (7 samples, 1.99%)</title><rect x="958.0" y="709" width="23.6" height="15.0" fill="rgb(238,140,45)" rx="2" ry="2" />
<text  x="961.03" y="719.5" >w..</text>
</g>
<g >
<title>enqueue_entity (5 samples, 1.42%)</title><rect x="420.1" y="69" width="16.9" height="15.0" fill="rgb(227,34,11)" rx="2" ry="2" />
<text  x="423.14" y="79.5" ></text>
</g>
<g >
<title>link_path_walk (8 samples, 2.28%)</title><rect x="954.7" y="725" width="26.9" height="15.0" fill="rgb(217,222,5)" rx="2" ry="2" />
<text  x="957.67" y="735.5" >l..</text>
</g>
<g >
<title>tcp_error (2 samples, 0.57%)</title><rect x="302.5" y="485" width="6.7" height="15.0" fill="rgb(246,43,8)" rx="2" ry="2" />
<text  x="305.48" y="495.5" ></text>
</g>
<g >
<title>__strchr_avx2 (1 samples, 0.28%)</title><rect x="991.7" y="837" width="3.3" height="15.0" fill="rgb(246,191,20)" rx="2" ry="2" />
<text  x="994.65" y="847.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (1 samples, 0.28%)</title><rect x="574.8" y="805" width="3.3" height="15.0" fill="rgb(234,191,29)" rx="2" ry="2" />
<text  x="577.79" y="815.5" ></text>
</g>
<g >
<title>new_sync_read (7 samples, 1.99%)</title><rect x="80.6" y="725" width="23.5" height="15.0" fill="rgb(210,154,42)" rx="2" ry="2" />
<text  x="83.60" y="735.5" >n..</text>
</g>
<g >
<title>__libc_read (1 samples, 0.28%)</title><rect x="924.4" y="837" width="3.4" height="15.0" fill="rgb(218,55,22)" rx="2" ry="2" />
<text  x="927.42" y="847.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.28%)</title><rect x="776.5" y="597" width="3.4" height="15.0" fill="rgb(231,53,27)" rx="2" ry="2" />
<text  x="779.50" y="607.5" ></text>
</g>
<g >
<title>single_release (2 samples, 0.57%)</title><rect x="917.7" y="725" width="6.7" height="15.0" fill="rgb(226,69,52)" rx="2" ry="2" />
<text  x="920.69" y="735.5" ></text>
</g>
<g >
<title>num_to_str (1 samples, 0.28%)</title><rect x="120.9" y="645" width="3.4" height="15.0" fill="rgb(222,17,17)" rx="2" ry="2" />
<text  x="123.94" y="655.5" ></text>
</g>
<g >
<title>kvmalloc_node (1 samples, 0.28%)</title><rect x="104.1" y="709" width="3.4" height="15.0" fill="rgb(228,129,41)" rx="2" ry="2" />
<text  x="107.13" y="719.5" ></text>
</g>
<g >
<title>redis-server (351 samples, 100.00%)</title><rect x="10.0" y="853" width="1180.0" height="15.0" fill="rgb(206,49,22)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >redis-server</text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.28%)</title><rect x="221.8" y="613" width="3.4" height="15.0" fill="rgb(250,12,6)" rx="2" ry="2" />
<text  x="224.79" y="623.5" ></text>
</g>
<g >
<title>vfs_read (24 samples, 6.84%)</title><rect x="77.2" y="757" width="80.7" height="15.0" fill="rgb(234,145,45)" rx="2" ry="2" />
<text  x="80.24" y="767.5" >vfs_read</text>
</g>
<g >
<title>sys_write (105 samples, 29.91%)</title><rect x="178.1" y="773" width="353.0" height="15.0" fill="rgb(238,88,9)" rx="2" ry="2" />
<text  x="181.09" y="783.5" >sys_write</text>
</g>
<g >
<title>nf_ct_get_tuple (1 samples, 0.28%)</title><rect x="292.4" y="469" width="3.4" height="15.0" fill="rgb(215,31,28)" rx="2" ry="2" />
<text  x="295.39" y="479.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (1 samples, 0.28%)</title><rect x="352.9" y="261" width="3.4" height="15.0" fill="rgb(223,47,32)" rx="2" ry="2" />
<text  x="355.91" y="271.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.28%)</title><rect x="211.7" y="581" width="3.4" height="15.0" fill="rgb(228,175,7)" rx="2" ry="2" />
<text  x="214.71" y="591.5" ></text>
</g>
<g >
<title>__vfs_write (103 samples, 29.34%)</title><rect x="178.1" y="741" width="346.3" height="15.0" fill="rgb(216,143,48)" rx="2" ry="2" />
<text  x="181.09" y="751.5" >__vfs_write</text>
</g>
<g >
<title>__libc_disable_asynccancel (1 samples, 0.28%)</title><rect x="53.7" y="821" width="3.4" height="15.0" fill="rgb(222,207,33)" rx="2" ry="2" />
<text  x="56.70" y="831.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.57%)</title><rect x="1153.0" y="837" width="6.7" height="15.0" fill="rgb(227,227,11)" rx="2" ry="2" />
<text  x="1156.02" y="847.5" ></text>
</g>
<g >
<title>net_rx_action (47 samples, 13.39%)</title><rect x="326.0" y="421" width="158.0" height="15.0" fill="rgb(251,29,36)" rx="2" ry="2" />
<text  x="329.01" y="431.5" >net_rx_action</text>
</g>
<g >
<title>sock_poll (2 samples, 0.57%)</title><rect x="1099.2" y="757" width="6.8" height="15.0" fill="rgb(252,124,35)" rx="2" ry="2" />
<text  x="1102.23" y="767.5" ></text>
</g>
<g >
<title>[unknown] (269 samples, 76.64%)</title><rect x="10.0" y="837" width="904.3" height="15.0" fill="rgb(251,191,43)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >[unknown]</text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.28%)</title><rect x="151.2" y="709" width="3.4" height="15.0" fill="rgb(233,219,54)" rx="2" ry="2" />
<text  x="154.20" y="719.5" ></text>
</g>
<g >
<title>prepareClientToWrite (1 samples, 0.28%)</title><rect x="1159.7" y="837" width="3.4" height="15.0" fill="rgb(236,8,7)" rx="2" ry="2" />
<text  x="1162.74" y="847.5" ></text>
</g>
<g >
<title>seq_put_decimal_ll (1 samples, 0.28%)</title><rect x="120.9" y="661" width="3.4" height="15.0" fill="rgb(214,128,28)" rx="2" ry="2" />
<text  x="123.94" y="671.5" ></text>
</g>
<g >
<title>get_empty_filp (3 samples, 0.85%)</title><rect x="944.6" y="725" width="10.1" height="15.0" fill="rgb(220,127,39)" rx="2" ry="2" />
<text  x="947.59" y="735.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.57%)</title><rect x="447.0" y="117" width="6.8" height="15.0" fill="rgb(230,149,19)" rx="2" ry="2" />
<text  x="450.04" y="127.5" ></text>
</g>
<g >
<title>__nf_ct_l4proto_find (1 samples, 0.28%)</title><rect x="289.0" y="469" width="3.4" height="15.0" fill="rgb(248,98,12)" rx="2" ry="2" />
<text  x="292.03" y="479.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.57%)</title><rect x="467.2" y="309" width="6.7" height="15.0" fill="rgb(206,102,8)" rx="2" ry="2" />
<text  x="470.21" y="319.5" ></text>
</g>
<g >
<title>nmi_handle (1 samples, 0.28%)</title><rect x="840.4" y="597" width="3.3" height="15.0" fill="rgb(235,17,5)" rx="2" ry="2" />
<text  x="843.37" y="607.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.28%)</title><rect x="789.9" y="597" width="3.4" height="15.0" fill="rgb(242,76,47)" rx="2" ry="2" />
<text  x="792.94" y="607.5" ></text>
</g>
<g >
<title>__inode_permission (1 samples, 0.28%)</title><rect x="954.7" y="693" width="3.3" height="15.0" fill="rgb(236,161,21)" rx="2" ry="2" />
<text  x="957.67" y="703.5" ></text>
</g>
<g >
<title>skb_put (1 samples, 0.28%)</title><rect x="225.2" y="629" width="3.3" height="15.0" fill="rgb(216,137,19)" rx="2" ry="2" />
<text  x="228.16" y="639.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.28%)</title><rect x="450.4" y="101" width="3.4" height="15.0" fill="rgb(210,228,18)" rx="2" ry="2" />
<text  x="453.40" y="111.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.57%)</title><rect x="944.6" y="709" width="6.7" height="15.0" fill="rgb(223,129,44)" rx="2" ry="2" />
<text  x="947.59" y="719.5" ></text>
</g>
<g >
<title>__alloc_skb (4 samples, 1.14%)</title><rect x="208.3" y="613" width="13.5" height="15.0" fill="rgb(242,201,35)" rx="2" ry="2" />
<text  x="211.35" y="623.5" ></text>
</g>
<g >
<title>ip_rcv (43 samples, 12.25%)</title><rect x="339.5" y="357" width="144.5" height="15.0" fill="rgb(229,151,31)" rx="2" ry="2" />
<text  x="342.46" y="367.5" >ip_rcv</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.28%)</title><rect x="1166.5" y="805" width="3.3" height="15.0" fill="rgb(241,3,22)" rx="2" ry="2" />
<text  x="1169.47" y="815.5" ></text>
</g>
<g >
<title>epoll_wait (96 samples, 27.35%)</title><rect x="578.1" y="821" width="322.8" height="15.0" fill="rgb(229,96,52)" rx="2" ry="2" />
<text  x="581.15" y="831.5" >epoll_wait</text>
</g>
<g >
<title>_copy_to_iter (1 samples, 0.28%)</title><rect x="97.4" y="629" width="3.4" height="15.0" fill="rgb(253,16,46)" rx="2" ry="2" />
<text  x="100.41" y="639.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (54 samples, 15.38%)</title><rect x="699.2" y="725" width="181.5" height="15.0" fill="rgb(234,49,53)" rx="2" ry="2" />
<text  x="702.17" y="735.5" >schedule_hrtimeout_rang..</text>
</g>
<g >
<title>reweight_entity (1 samples, 0.28%)</title><rect x="763.0" y="613" width="3.4" height="15.0" fill="rgb(248,185,40)" rx="2" ry="2" />
<text  x="766.05" y="623.5" ></text>
</g>
<g >
<title>sock_def_readable (16 samples, 4.56%)</title><rect x="400.0" y="229" width="53.8" height="15.0" fill="rgb(214,141,13)" rx="2" ry="2" />
<text  x="402.97" y="239.5" >sock_..</text>
</g>
<g >
<title>expireIfNeeded (1 samples, 0.28%)</title><rect x="900.9" y="821" width="3.3" height="15.0" fill="rgb(237,65,23)" rx="2" ry="2" />
<text  x="903.88" y="831.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (6 samples, 1.71%)</title><rect x="655.5" y="709" width="20.1" height="15.0" fill="rgb(249,229,54)" rx="2" ry="2" />
<text  x="658.47" y="719.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (18 samples, 5.13%)</title><rect x="621.9" y="741" width="60.5" height="15.0" fill="rgb(209,54,43)" rx="2" ry="2" />
<text  x="624.85" y="751.5" >ep_sca..</text>
</g>
<g >
<title>call (1 samples, 0.28%)</title><rect x="1032.0" y="837" width="3.4" height="15.0" fill="rgb(228,148,37)" rx="2" ry="2" />
<text  x="1034.99" y="847.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.28%)</title><rect x="497.5" y="405" width="3.3" height="15.0" fill="rgb(208,13,43)" rx="2" ry="2" />
<text  x="500.46" y="415.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.57%)</title><rect x="137.7" y="725" width="6.8" height="15.0" fill="rgb(222,223,2)" rx="2" ry="2" />
<text  x="140.75" y="735.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.28%)</title><rect x="500.8" y="453" width="3.4" height="15.0" fill="rgb(208,183,3)" rx="2" ry="2" />
<text  x="503.83" y="463.5" ></text>
</g>
<g >
<title>raw_local_deliver (1 samples, 0.28%)</title><rect x="473.9" y="309" width="3.4" height="15.0" fill="rgb(227,10,46)" rx="2" ry="2" />
<text  x="476.93" y="319.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.28%)</title><rect x="154.6" y="709" width="3.3" height="15.0" fill="rgb(242,31,1)" rx="2" ry="2" />
<text  x="157.56" y="719.5" ></text>
</g>
<g >
<title>all (351 samples, 100%)</title><rect x="10.0" y="869" width="1180.0" height="15.0" fill="rgb(253,28,43)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.28%)</title><rect x="1102.6" y="725" width="3.4" height="15.0" fill="rgb(212,141,42)" rx="2" ry="2" />
<text  x="1105.59" y="735.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.28%)</title><rect x="527.7" y="725" width="3.4" height="15.0" fill="rgb(249,79,40)" rx="2" ry="2" />
<text  x="530.72" y="735.5" ></text>
</g>
<g >
<title>skb_release_all (5 samples, 1.42%)</title><rect x="373.1" y="197" width="16.8" height="15.0" fill="rgb(225,207,27)" rx="2" ry="2" />
<text  x="376.08" y="207.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.28%)</title><rect x="917.7" y="709" width="3.4" height="15.0" fill="rgb(231,7,42)" rx="2" ry="2" />
<text  x="920.69" y="719.5" ></text>
</g>
<g >
<title>aeCreateFileEvent (1 samples, 0.28%)</title><rect x="1015.2" y="837" width="3.3" height="15.0" fill="rgb(243,214,24)" rx="2" ry="2" />
<text  x="1018.19" y="847.5" ></text>
</g>
<g >
<title>__inet_lookup_established (2 samples, 0.57%)</title><rect x="346.2" y="277" width="6.7" height="15.0" fill="rgb(245,157,8)" rx="2" ry="2" />
<text  x="349.18" y="287.5" ></text>
</g>
<g >
<title>tcp_send_mss (3 samples, 0.85%)</title><rect x="514.3" y="629" width="10.1" height="15.0" fill="rgb(251,64,43)" rx="2" ry="2" />
<text  x="517.27" y="639.5" ></text>
</g>
<g >
<title>ctx_sched_out (1 samples, 0.28%)</title><rect x="756.3" y="645" width="3.4" height="15.0" fill="rgb(254,102,21)" rx="2" ry="2" />
<text  x="759.32" y="655.5" ></text>
</g>
<g >
<title>zmalloc (1 samples, 0.28%)</title><rect x="1183.3" y="837" width="3.3" height="15.0" fill="rgb(220,215,50)" rx="2" ry="2" />
<text  x="1186.28" y="847.5" ></text>
</g>
<g >
<title>timerqueue_del (2 samples, 0.57%)</title><rect x="726.1" y="677" width="6.7" height="15.0" fill="rgb(244,61,21)" rx="2" ry="2" />
<text  x="729.07" y="687.5" ></text>
</g>
<g >
<title>tcp_poll (2 samples, 0.57%)</title><rect x="1099.2" y="741" width="6.8" height="15.0" fill="rgb(251,119,33)" rx="2" ry="2" />
<text  x="1102.23" y="751.5" ></text>
</g>
<g >
<title>freeClientArgv (1 samples, 0.28%)</title><rect x="1116.0" y="837" width="3.4" height="15.0" fill="rgb(227,203,38)" rx="2" ry="2" />
<text  x="1119.04" y="847.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.28%)</title><rect x="867.3" y="629" width="3.3" height="15.0" fill="rgb(214,100,52)" rx="2" ry="2" />
<text  x="870.26" y="639.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (1 samples, 0.28%)</title><rect x="1028.6" y="821" width="3.4" height="15.0" fill="rgb(236,102,3)" rx="2" ry="2" />
<text  x="1031.63" y="831.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.28%)</title><rect x="1166.5" y="773" width="3.3" height="15.0" fill="rgb(223,207,40)" rx="2" ry="2" />
<text  x="1169.47" y="783.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (101 samples, 28.77%)</title><rect x="184.8" y="645" width="339.6" height="15.0" fill="rgb(225,134,17)" rx="2" ry="2" />
<text  x="187.81" y="655.5" >tcp_sendmsg_locked</text>
</g>
<g >
<title>__tcp_push_pending_frames (84 samples, 23.93%)</title><rect x="231.9" y="613" width="282.4" height="15.0" fill="rgb(229,0,4)" rx="2" ry="2" />
<text  x="234.88" y="623.5" >__tcp_push_pending_frames</text>
</g>
<g >
<title>ip_queue_xmit (78 samples, 22.22%)</title><rect x="245.3" y="565" width="262.2" height="15.0" fill="rgb(243,88,25)" rx="2" ry="2" />
<text  x="248.33" y="575.5" >ip_queue_xmit</text>
</g>
<g >
<title>ll2string (1 samples, 0.28%)</title><rect x="904.2" y="821" width="3.4" height="15.0" fill="rgb(228,86,54)" rx="2" ry="2" />
<text  x="907.25" y="831.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.28%)</title><rect x="211.7" y="597" width="3.4" height="15.0" fill="rgb(207,189,33)" rx="2" ry="2" />
<text  x="214.71" y="607.5" ></text>
</g>
<g >
<title>sock_sendmsg (103 samples, 29.34%)</title><rect x="178.1" y="693" width="346.3" height="15.0" fill="rgb(245,127,0)" rx="2" ry="2" />
<text  x="181.09" y="703.5" >sock_sendmsg</text>
</g>
<g >
<title>sys_read (26 samples, 7.41%)</title><rect x="70.5" y="773" width="87.4" height="15.0" fill="rgb(237,21,19)" rx="2" ry="2" />
<text  x="73.51" y="783.5" >sys_read</text>
</g>
<g >
<title>tcp_event_new_data_sent (1 samples, 0.28%)</title><rect x="507.5" y="581" width="3.4" height="15.0" fill="rgb(238,133,30)" rx="2" ry="2" />
<text  x="510.55" y="591.5" ></text>
</g>
<g >
<title>__ip_local_out (18 samples, 5.13%)</title><rect x="248.7" y="533" width="60.5" height="15.0" fill="rgb(247,3,17)" rx="2" ry="2" />
<text  x="251.69" y="543.5" >__ip_l..</text>
</g>
<g >
<title>ipt_do_table (2 samples, 0.57%)</title><rect x="467.2" y="277" width="6.7" height="15.0" fill="rgb(213,184,50)" rx="2" ry="2" />
<text  x="470.21" y="287.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.28%)</title><rect x="1106.0" y="773" width="3.3" height="15.0" fill="rgb(217,118,26)" rx="2" ry="2" />
<text  x="1108.95" y="783.5" ></text>
</g>
<g >
<title>__netif_receive_skb (47 samples, 13.39%)</title><rect x="326.0" y="389" width="158.0" height="15.0" fill="rgb(235,205,32)" rx="2" ry="2" />
<text  x="329.01" y="399.5" >__netif_receive_skb</text>
</g>
<g >
<title>do_softirq_own_stack (47 samples, 13.39%)</title><rect x="326.0" y="453" width="158.0" height="15.0" fill="rgb(225,126,49)" rx="2" ry="2" />
<text  x="329.01" y="463.5" >do_softirq_own_stack</text>
</g>
<g >
<title>do_syscall_64 (14 samples, 3.99%)</title><rect x="944.6" y="805" width="47.1" height="15.0" fill="rgb(214,164,1)" rx="2" ry="2" />
<text  x="947.59" y="815.5" >do_s..</text>
</g>
<g >
<title>__fput (2 samples, 0.57%)</title><rect x="917.7" y="741" width="6.7" height="15.0" fill="rgb(246,190,47)" rx="2" ry="2" />
<text  x="920.69" y="751.5" ></text>
</g>
<g >
<title>lookup_fast (5 samples, 1.42%)</title><rect x="964.8" y="693" width="16.8" height="15.0" fill="rgb(209,154,45)" rx="2" ry="2" />
<text  x="967.76" y="703.5" ></text>
</g>
<g >
<title>kvfree (1 samples, 0.28%)</title><rect x="921.1" y="709" width="3.3" height="15.0" fill="rgb(230,176,36)" rx="2" ry="2" />
<text  x="924.05" y="719.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.28%)</title><rect x="423.5" y="53" width="3.4" height="15.0" fill="rgb(223,46,51)" rx="2" ry="2" />
<text  x="426.50" y="63.5" ></text>
</g>
<g >
<title>tcp_data_queue (17 samples, 4.84%)</title><rect x="396.6" y="245" width="57.2" height="15.0" fill="rgb(233,189,30)" rx="2" ry="2" />
<text  x="399.61" y="255.5" >tcp_da..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27 samples, 7.69%)</title><rect x="67.2" y="805" width="90.7" height="15.0" fill="rgb(236,156,34)" rx="2" ry="2" />
<text  x="70.15" y="815.5" >entry_SYSC..</text>
</g>
<g >
<title>put_dec_trunc8 (1 samples, 0.28%)</title><rect x="127.7" y="613" width="3.3" height="15.0" fill="rgb(226,89,21)" rx="2" ry="2" />
<text  x="130.66" y="623.5" ></text>
</g>
<g >
<title>ttwu_do_activate (13 samples, 3.70%)</title><rect x="403.3" y="117" width="43.7" height="15.0" fill="rgb(252,99,16)" rx="2" ry="2" />
<text  x="406.33" y="127.5" >ttwu..</text>
</g>
<g >
<title>fput (1 samples, 0.28%)</title><rect x="174.7" y="773" width="3.4" height="15.0" fill="rgb(246,33,50)" rx="2" ry="2" />
<text  x="177.73" y="783.5" ></text>
</g>
<g >
<title>nsec_to_clock_t (1 samples, 0.28%)</title><rect x="131.0" y="677" width="3.4" height="15.0" fill="rgb(208,172,13)" rx="2" ry="2" />
<text  x="134.03" y="687.5" ></text>
</g>
<g >
<title>acpi_os_read_memory (1 samples, 0.28%)</title><rect x="779.9" y="597" width="3.3" height="15.0" fill="rgb(254,124,26)" rx="2" ry="2" />
<text  x="782.86" y="607.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.57%)</title><rect x="1085.8" y="773" width="6.7" height="15.0" fill="rgb(233,74,29)" rx="2" ry="2" />
<text  x="1088.78" y="783.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.28%)</title><rect x="363.0" y="245" width="3.4" height="15.0" fill="rgb(244,25,46)" rx="2" ry="2" />
<text  x="365.99" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.85%)</title><rect x="931.1" y="837" width="10.1" height="15.0" fill="rgb(245,121,15)" rx="2" ry="2" />
<text  x="934.14" y="847.5" ></text>
</g>
</g>
</svg>
